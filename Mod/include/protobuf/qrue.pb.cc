// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: qrue.proto

#include "qrue.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
constexpr Il2CppClassInfo::Il2CppClassInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : namespaze_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , clazz_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct Il2CppClassInfoDefaultTypeInternal {
  constexpr Il2CppClassInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Il2CppClassInfoDefaultTypeInternal() {}
  union {
    Il2CppClassInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Il2CppClassInfoDefaultTypeInternal _Il2CppClassInfo_default_instance_;
constexpr TypeInfo::TypeInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : classinfo_(nullptr)
  , type_(0)

  , primitivetype_(0)
{}
struct TypeInfoDefaultTypeInternal {
  constexpr TypeInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TypeInfoDefaultTypeInternal() {}
  union {
    TypeInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TypeInfoDefaultTypeInternal _TypeInfo_default_instance_;
constexpr Il2CppFieldInfo::Il2CppFieldInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , type_(nullptr){}
struct Il2CppFieldInfoDefaultTypeInternal {
  constexpr Il2CppFieldInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Il2CppFieldInfoDefaultTypeInternal() {}
  union {
    Il2CppFieldInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Il2CppFieldInfoDefaultTypeInternal _Il2CppFieldInfo_default_instance_;
constexpr Il2CppPropertyInfo::Il2CppPropertyInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , id_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , type_(nullptr)
  , hasget_(false)
  , hasset_(false){}
struct Il2CppPropertyInfoDefaultTypeInternal {
  constexpr Il2CppPropertyInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Il2CppPropertyInfoDefaultTypeInternal() {}
  union {
    Il2CppPropertyInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Il2CppPropertyInfoDefaultTypeInternal _Il2CppPropertyInfo_default_instance_;
constexpr Il2CppMethodInfo::Il2CppMethodInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : argnames_()
  , argtypes_()
  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , id_(uint64_t{0u}){}
struct Il2CppMethodInfoDefaultTypeInternal {
  constexpr Il2CppMethodInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Il2CppMethodInfoDefaultTypeInternal() {}
  union {
    Il2CppMethodInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Il2CppMethodInfoDefaultTypeInternal _Il2CppMethodInfo_default_instance_;
constexpr Il2CppType::Il2CppType(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : generics_()
  , interfaces_()
  , fields_()
  , properties_()
  , methods_()
  , namespaze_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , clazz_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , parent_(nullptr){}
struct Il2CppTypeDefaultTypeInternal {
  constexpr Il2CppTypeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Il2CppTypeDefaultTypeInternal() {}
  union {
    Il2CppType _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Il2CppTypeDefaultTypeInternal _Il2CppType_default_instance_;
constexpr Il2CppData::Il2CppData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , typeinfo_(nullptr)
  , type_(0)
{}
struct Il2CppDataDefaultTypeInternal {
  constexpr Il2CppDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~Il2CppDataDefaultTypeInternal() {}
  union {
    Il2CppData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT Il2CppDataDefaultTypeInternal _Il2CppData_default_instance_;
constexpr InvokeMethod::InvokeMethod(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : args_()
  , methodid_(uint64_t{0u})
  , invokeuuid_(uint64_t{0u}){}
struct InvokeMethodDefaultTypeInternal {
  constexpr InvokeMethodDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~InvokeMethodDefaultTypeInternal() {}
  union {
    InvokeMethod _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT InvokeMethodDefaultTypeInternal _InvokeMethod_default_instance_;
constexpr InvokeMethodResult::InvokeMethodResult(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : error_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , result_(nullptr)
  , methodid_(uint64_t{0u})
  , invokeuuid_(uint64_t{0u})
  , status_(0)
{}
struct InvokeMethodResultDefaultTypeInternal {
  constexpr InvokeMethodResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~InvokeMethodResultDefaultTypeInternal() {}
  union {
    InvokeMethodResult _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT InvokeMethodResultDefaultTypeInternal _InvokeMethodResult_default_instance_;
constexpr SearchObjects::SearchObjects(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : objectname_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , requiredcomponent_(nullptr)
  , queryid_(uint64_t{0u}){}
struct SearchObjectsDefaultTypeInternal {
  constexpr SearchObjectsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SearchObjectsDefaultTypeInternal() {}
  union {
    SearchObjects _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SearchObjectsDefaultTypeInternal _SearchObjects_default_instance_;
constexpr SearchObjectsResult::SearchObjectsResult(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : foundobjects_()
  , queryid_(uint64_t{0u}){}
struct SearchObjectsResultDefaultTypeInternal {
  constexpr SearchObjectsResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SearchObjectsResultDefaultTypeInternal() {}
  union {
    SearchObjectsResult _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SearchObjectsResultDefaultTypeInternal _SearchObjectsResult_default_instance_;
constexpr LoadObject::LoadObject(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : pointer_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , loadid_(uint64_t{0u}){}
struct LoadObjectDefaultTypeInternal {
  constexpr LoadObjectDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~LoadObjectDefaultTypeInternal() {}
  union {
    LoadObject _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT LoadObjectDefaultTypeInternal _LoadObject_default_instance_;
constexpr LoadObjectResult::LoadObjectResult(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : object_(nullptr)
  , loadid_(uint64_t{0u}){}
struct LoadObjectResultDefaultTypeInternal {
  constexpr LoadObjectResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~LoadObjectResultDefaultTypeInternal() {}
  union {
    LoadObjectResult _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT LoadObjectResultDefaultTypeInternal _LoadObjectResult_default_instance_;
constexpr PacketWrapper::PacketWrapper(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : _oneof_case_{}{}
struct PacketWrapperDefaultTypeInternal {
  constexpr PacketWrapperDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PacketWrapperDefaultTypeInternal() {}
  union {
    PacketWrapper _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PacketWrapperDefaultTypeInternal _PacketWrapper_default_instance_;
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_qrue_2eproto[14];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_qrue_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_qrue_2eproto = nullptr;

const uint32_t TableStruct_qrue_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Il2CppClassInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Il2CppClassInfo, namespaze_),
  PROTOBUF_FIELD_OFFSET(::Il2CppClassInfo, clazz_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::TypeInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::TypeInfo, type_),
  PROTOBUF_FIELD_OFFSET(::TypeInfo, primitivetype_),
  PROTOBUF_FIELD_OFFSET(::TypeInfo, classinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Il2CppFieldInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Il2CppFieldInfo, name_),
  PROTOBUF_FIELD_OFFSET(::Il2CppFieldInfo, id_),
  PROTOBUF_FIELD_OFFSET(::Il2CppFieldInfo, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Il2CppPropertyInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Il2CppPropertyInfo, name_),
  PROTOBUF_FIELD_OFFSET(::Il2CppPropertyInfo, id_),
  PROTOBUF_FIELD_OFFSET(::Il2CppPropertyInfo, hasget_),
  PROTOBUF_FIELD_OFFSET(::Il2CppPropertyInfo, hasset_),
  PROTOBUF_FIELD_OFFSET(::Il2CppPropertyInfo, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Il2CppMethodInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Il2CppMethodInfo, name_),
  PROTOBUF_FIELD_OFFSET(::Il2CppMethodInfo, id_),
  PROTOBUF_FIELD_OFFSET(::Il2CppMethodInfo, argnames_),
  PROTOBUF_FIELD_OFFSET(::Il2CppMethodInfo, argtypes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Il2CppType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Il2CppType, namespaze_),
  PROTOBUF_FIELD_OFFSET(::Il2CppType, clazz_),
  PROTOBUF_FIELD_OFFSET(::Il2CppType, generics_),
  PROTOBUF_FIELD_OFFSET(::Il2CppType, parent_),
  PROTOBUF_FIELD_OFFSET(::Il2CppType, interfaces_),
  PROTOBUF_FIELD_OFFSET(::Il2CppType, fields_),
  PROTOBUF_FIELD_OFFSET(::Il2CppType, properties_),
  PROTOBUF_FIELD_OFFSET(::Il2CppType, methods_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Il2CppData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Il2CppData, type_),
  PROTOBUF_FIELD_OFFSET(::Il2CppData, typeinfo_),
  PROTOBUF_FIELD_OFFSET(::Il2CppData, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::InvokeMethod, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::InvokeMethod, methodid_),
  PROTOBUF_FIELD_OFFSET(::InvokeMethod, invokeuuid_),
  PROTOBUF_FIELD_OFFSET(::InvokeMethod, args_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::InvokeMethodResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::InvokeMethodResult, status_),
  PROTOBUF_FIELD_OFFSET(::InvokeMethodResult, methodid_),
  PROTOBUF_FIELD_OFFSET(::InvokeMethodResult, invokeuuid_),
  PROTOBUF_FIELD_OFFSET(::InvokeMethodResult, result_),
  PROTOBUF_FIELD_OFFSET(::InvokeMethodResult, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SearchObjects, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::SearchObjects, queryid_),
  PROTOBUF_FIELD_OFFSET(::SearchObjects, objectname_),
  PROTOBUF_FIELD_OFFSET(::SearchObjects, requiredcomponent_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SearchObjectsResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::SearchObjectsResult, queryid_),
  PROTOBUF_FIELD_OFFSET(::SearchObjectsResult, foundobjects_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::LoadObject, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::LoadObject, loadid_),
  PROTOBUF_FIELD_OFFSET(::LoadObject, pointer_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::LoadObjectResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::LoadObjectResult, loadid_),
  PROTOBUF_FIELD_OFFSET(::LoadObjectResult, object_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PacketWrapper, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::PacketWrapper, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::PacketWrapper, Packet_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::Il2CppClassInfo)},
  { 8, -1, -1, sizeof(::TypeInfo)},
  { 17, -1, -1, sizeof(::Il2CppFieldInfo)},
  { 26, -1, -1, sizeof(::Il2CppPropertyInfo)},
  { 37, -1, -1, sizeof(::Il2CppMethodInfo)},
  { 47, -1, -1, sizeof(::Il2CppType)},
  { 61, -1, -1, sizeof(::Il2CppData)},
  { 70, -1, -1, sizeof(::InvokeMethod)},
  { 79, -1, -1, sizeof(::InvokeMethodResult)},
  { 90, -1, -1, sizeof(::SearchObjects)},
  { 99, -1, -1, sizeof(::SearchObjectsResult)},
  { 107, -1, -1, sizeof(::LoadObject)},
  { 115, -1, -1, sizeof(::LoadObjectResult)},
  { 123, -1, -1, sizeof(::PacketWrapper)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Il2CppClassInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_TypeInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Il2CppFieldInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Il2CppPropertyInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Il2CppMethodInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Il2CppType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_Il2CppData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_InvokeMethod_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_InvokeMethodResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_SearchObjects_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_SearchObjectsResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_LoadObject_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_LoadObjectResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_PacketWrapper_default_instance_),
};

const char descriptor_table_protodef_qrue_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\nqrue.proto\"3\n\017Il2CppClassInfo\022\021\n\tnames"
  "paze\030\001 \001(\t\022\r\n\005clazz\030\002 \001(\t\"\353\001\n\010TypeInfo\022\034"
  "\n\004type\030\001 \001(\0162\016.TypeInfo.Type\022*\n\rprimitiv"
  "eType\030\002 \001(\0162\023.TypeInfo.Primitive\022#\n\tclas"
  "sInfo\030\003 \001(\0132\020.Il2CppClassInfo\",\n\004Type\022\r\n"
  "\tPRIMITIVE\020\000\022\n\n\006STRUCT\020\001\022\t\n\005CLASS\020\002\"B\n\tP"
  "rimitive\022\013\n\007BOOLEAN\020\000\022\010\n\004CHAR\020\001\022\007\n\003INT\020\002"
  "\022\t\n\005FLOAT\020\003\022\n\n\006STRING\020\004\"F\n\017Il2CppFieldIn"
  "fo\022\014\n\004name\030\001 \001(\t\022\n\n\002id\030\002 \001(\t\022\031\n\004type\030\003 \001"
  "(\0132\013.Il2CppData\"i\n\022Il2CppPropertyInfo\022\014\n"
  "\004name\030\001 \001(\t\022\n\n\002id\030\002 \001(\t\022\016\n\006hasGet\030\003 \001(\010\022"
  "\016\n\006hasSet\030\004 \001(\010\022\031\n\004type\030\005 \001(\0132\013.Il2CppDa"
  "ta\"]\n\020Il2CppMethodInfo\022\014\n\004name\030\001 \001(\t\022\n\n\002"
  "id\030\002 \001(\004\022\020\n\010argNames\030\003 \003(\t\022\035\n\010argTypes\030\004"
  " \003(\0132\013.Il2CppData\"\377\001\n\nIl2CppType\022\021\n\tname"
  "spaze\030\001 \001(\t\022\r\n\005clazz\030\002 \001(\t\022\"\n\010generics\030\003"
  " \003(\0132\020.Il2CppClassInfo\022\033\n\006parent\030\004 \001(\0132\013"
  ".Il2CppType\022\037\n\ninterfaces\030\005 \003(\0132\013.Il2Cpp"
  "Type\022 \n\006fields\030\006 \003(\0132\020.Il2CppFieldInfo\022\'"
  "\n\nproperties\030\007 \003(\0132\023.Il2CppPropertyInfo\022"
  "\"\n\007methods\030\010 \003(\0132\021.Il2CppMethodInfo\"\214\001\n\n"
  "Il2CppData\022\036\n\004type\030\001 \001(\0162\020.Il2CppData.Ty"
  "pe\022\"\n\010typeInfo\030\002 \001(\0132\020.Il2CppClassInfo\022\014"
  "\n\004data\030\003 \001(\014\",\n\004Type\022\r\n\tPRIMITIVE\020\000\022\n\n\006S"
  "TRUCT\020\001\022\t\n\005CLASS\020\002\"O\n\014InvokeMethod\022\020\n\010me"
  "thodId\030\001 \001(\004\022\022\n\ninvokeUUID\030\002 \001(\004\022\031\n\004args"
  "\030\003 \003(\0132\013.Il2CppData\"\274\001\n\022InvokeMethodResu"
  "lt\022*\n\006status\030\001 \001(\0162\032.InvokeMethodResult."
  "Status\022\020\n\010methodId\030\002 \001(\004\022\022\n\ninvokeUUID\030\003"
  " \001(\004\022\033\n\006result\030\004 \001(\0132\013.Il2CppData\022\r\n\005err"
  "or\030\005 \001(\t\"(\n\006Status\022\006\n\002OK\020\000\022\007\n\003ERR\020\001\022\r\n\tN"
  "OT_FOUND\020\002\"a\n\rSearchObjects\022\017\n\007queryId\030\001"
  " \001(\004\022\022\n\nobjectName\030\002 \001(\t\022+\n\021requiredComp"
  "onent\030\003 \001(\0132\020.Il2CppClassInfo\"<\n\023SearchO"
  "bjectsResult\022\017\n\007queryId\030\001 \001(\004\022\024\n\014foundOb"
  "jects\030\002 \003(\t\"-\n\nLoadObject\022\016\n\006loadId\030\001 \001("
  "\004\022\017\n\007pointer\030\002 \001(\014\"\?\n\020LoadObjectResult\022\016"
  "\n\006loadId\030\001 \001(\004\022\033\n\006object\030\002 \001(\0132\013.Il2CppT"
  "ype\"\243\002\n\rPacketWrapper\022%\n\014invokeMethod\030\001 "
  "\001(\0132\r.InvokeMethodH\000\0221\n\022invokeMethodResu"
  "lt\030\002 \001(\0132\023.InvokeMethodResultH\000\022\'\n\rsearc"
  "hObjects\030\003 \001(\0132\016.SearchObjectsH\000\0223\n\023sear"
  "chObjectsResult\030\004 \001(\0132\024.SearchObjectsRes"
  "ultH\000\022!\n\nloadObject\030\005 \001(\0132\013.LoadObjectH\000"
  "\022-\n\020loadObjectResult\030\006 \001(\0132\021.LoadObjectR"
  "esultH\000B\010\n\006Packetb\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_qrue_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_qrue_2eproto = {
  false, false, 1825, descriptor_table_protodef_qrue_2eproto, "qrue.proto", 
  &descriptor_table_qrue_2eproto_once, nullptr, 0, 14,
  schemas, file_default_instances, TableStruct_qrue_2eproto::offsets,
  file_level_metadata_qrue_2eproto, file_level_enum_descriptors_qrue_2eproto, file_level_service_descriptors_qrue_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_qrue_2eproto_getter() {
  return &descriptor_table_qrue_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_qrue_2eproto(&descriptor_table_qrue_2eproto);
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* TypeInfo_Type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_qrue_2eproto);
  return file_level_enum_descriptors_qrue_2eproto[0];
}
bool TypeInfo_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr TypeInfo_Type TypeInfo::PRIMITIVE;
constexpr TypeInfo_Type TypeInfo::STRUCT;
constexpr TypeInfo_Type TypeInfo::CLASS;
constexpr TypeInfo_Type TypeInfo::Type_MIN;
constexpr TypeInfo_Type TypeInfo::Type_MAX;
constexpr int TypeInfo::Type_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* TypeInfo_Primitive_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_qrue_2eproto);
  return file_level_enum_descriptors_qrue_2eproto[1];
}
bool TypeInfo_Primitive_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr TypeInfo_Primitive TypeInfo::BOOLEAN;
constexpr TypeInfo_Primitive TypeInfo::CHAR;
constexpr TypeInfo_Primitive TypeInfo::INT;
constexpr TypeInfo_Primitive TypeInfo::FLOAT;
constexpr TypeInfo_Primitive TypeInfo::STRING;
constexpr TypeInfo_Primitive TypeInfo::Primitive_MIN;
constexpr TypeInfo_Primitive TypeInfo::Primitive_MAX;
constexpr int TypeInfo::Primitive_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Il2CppData_Type_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_qrue_2eproto);
  return file_level_enum_descriptors_qrue_2eproto[2];
}
bool Il2CppData_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr Il2CppData_Type Il2CppData::PRIMITIVE;
constexpr Il2CppData_Type Il2CppData::STRUCT;
constexpr Il2CppData_Type Il2CppData::CLASS;
constexpr Il2CppData_Type Il2CppData::Type_MIN;
constexpr Il2CppData_Type Il2CppData::Type_MAX;
constexpr int Il2CppData::Type_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* InvokeMethodResult_Status_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_qrue_2eproto);
  return file_level_enum_descriptors_qrue_2eproto[3];
}
bool InvokeMethodResult_Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr InvokeMethodResult_Status InvokeMethodResult::OK;
constexpr InvokeMethodResult_Status InvokeMethodResult::ERR;
constexpr InvokeMethodResult_Status InvokeMethodResult::NOT_FOUND;
constexpr InvokeMethodResult_Status InvokeMethodResult::Status_MIN;
constexpr InvokeMethodResult_Status InvokeMethodResult::Status_MAX;
constexpr int InvokeMethodResult::Status_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class Il2CppClassInfo::_Internal {
 public:
};

Il2CppClassInfo::Il2CppClassInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Il2CppClassInfo)
}
Il2CppClassInfo::Il2CppClassInfo(const Il2CppClassInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  namespaze_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    namespaze_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_namespaze().empty()) {
    namespaze_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_namespaze(), 
      GetArenaForAllocation());
  }
  clazz_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    clazz_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_clazz().empty()) {
    clazz_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_clazz(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:Il2CppClassInfo)
}

inline void Il2CppClassInfo::SharedCtor() {
namespaze_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  namespaze_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
clazz_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  clazz_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Il2CppClassInfo::~Il2CppClassInfo() {
  // @@protoc_insertion_point(destructor:Il2CppClassInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Il2CppClassInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  namespaze_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clazz_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Il2CppClassInfo::ArenaDtor(void* object) {
  Il2CppClassInfo* _this = reinterpret_cast< Il2CppClassInfo* >(object);
  (void)_this;
}
void Il2CppClassInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Il2CppClassInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Il2CppClassInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Il2CppClassInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  namespaze_.ClearToEmpty();
  clazz_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Il2CppClassInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string namespaze = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_namespaze();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Il2CppClassInfo.namespaze"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string clazz = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_clazz();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Il2CppClassInfo.clazz"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Il2CppClassInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Il2CppClassInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string namespaze = 1;
  if (!this->_internal_namespaze().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_namespaze().data(), static_cast<int>(this->_internal_namespaze().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Il2CppClassInfo.namespaze");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_namespaze(), target);
  }

  // string clazz = 2;
  if (!this->_internal_clazz().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_clazz().data(), static_cast<int>(this->_internal_clazz().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Il2CppClassInfo.clazz");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_clazz(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Il2CppClassInfo)
  return target;
}

size_t Il2CppClassInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Il2CppClassInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string namespaze = 1;
  if (!this->_internal_namespaze().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_namespaze());
  }

  // string clazz = 2;
  if (!this->_internal_clazz().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_clazz());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Il2CppClassInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Il2CppClassInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Il2CppClassInfo::GetClassData() const { return &_class_data_; }

void Il2CppClassInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Il2CppClassInfo *>(to)->MergeFrom(
      static_cast<const Il2CppClassInfo &>(from));
}


void Il2CppClassInfo::MergeFrom(const Il2CppClassInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Il2CppClassInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_namespaze().empty()) {
    _internal_set_namespaze(from._internal_namespaze());
  }
  if (!from._internal_clazz().empty()) {
    _internal_set_clazz(from._internal_clazz());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Il2CppClassInfo::CopyFrom(const Il2CppClassInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Il2CppClassInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Il2CppClassInfo::IsInitialized() const {
  return true;
}

void Il2CppClassInfo::InternalSwap(Il2CppClassInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &namespaze_, lhs_arena,
      &other->namespaze_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &clazz_, lhs_arena,
      &other->clazz_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Il2CppClassInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_qrue_2eproto_getter, &descriptor_table_qrue_2eproto_once,
      file_level_metadata_qrue_2eproto[0]);
}

// ===================================================================

class TypeInfo::_Internal {
 public:
  static const ::Il2CppClassInfo& classinfo(const TypeInfo* msg);
};

const ::Il2CppClassInfo&
TypeInfo::_Internal::classinfo(const TypeInfo* msg) {
  return *msg->classinfo_;
}
TypeInfo::TypeInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:TypeInfo)
}
TypeInfo::TypeInfo(const TypeInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_classinfo()) {
    classinfo_ = new ::Il2CppClassInfo(*from.classinfo_);
  } else {
    classinfo_ = nullptr;
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&primitivetype_) -
    reinterpret_cast<char*>(&type_)) + sizeof(primitivetype_));
  // @@protoc_insertion_point(copy_constructor:TypeInfo)
}

inline void TypeInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&classinfo_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&primitivetype_) -
    reinterpret_cast<char*>(&classinfo_)) + sizeof(primitivetype_));
}

TypeInfo::~TypeInfo() {
  // @@protoc_insertion_point(destructor:TypeInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void TypeInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete classinfo_;
}

void TypeInfo::ArenaDtor(void* object) {
  TypeInfo* _this = reinterpret_cast< TypeInfo* >(object);
  (void)_this;
}
void TypeInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TypeInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TypeInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:TypeInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && classinfo_ != nullptr) {
    delete classinfo_;
  }
  classinfo_ = nullptr;
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&primitivetype_) -
      reinterpret_cast<char*>(&type_)) + sizeof(primitivetype_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TypeInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .TypeInfo.Type type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::TypeInfo_Type>(val));
        } else
          goto handle_unusual;
        continue;
      // .TypeInfo.Primitive primitiveType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_primitivetype(static_cast<::TypeInfo_Primitive>(val));
        } else
          goto handle_unusual;
        continue;
      // .Il2CppClassInfo classInfo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_classinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* TypeInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TypeInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .TypeInfo.Type type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  // .TypeInfo.Primitive primitiveType = 2;
  if (this->_internal_primitivetype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_primitivetype(), target);
  }

  // .Il2CppClassInfo classInfo = 3;
  if (this->_internal_has_classinfo()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::classinfo(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TypeInfo)
  return target;
}

size_t TypeInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TypeInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Il2CppClassInfo classInfo = 3;
  if (this->_internal_has_classinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *classinfo_);
  }

  // .TypeInfo.Type type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  // .TypeInfo.Primitive primitiveType = 2;
  if (this->_internal_primitivetype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_primitivetype());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData TypeInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    TypeInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*TypeInfo::GetClassData() const { return &_class_data_; }

void TypeInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<TypeInfo *>(to)->MergeFrom(
      static_cast<const TypeInfo &>(from));
}


void TypeInfo::MergeFrom(const TypeInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TypeInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_classinfo()) {
    _internal_mutable_classinfo()->::Il2CppClassInfo::MergeFrom(from._internal_classinfo());
  }
  if (from._internal_type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from._internal_primitivetype() != 0) {
    _internal_set_primitivetype(from._internal_primitivetype());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void TypeInfo::CopyFrom(const TypeInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TypeInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TypeInfo::IsInitialized() const {
  return true;
}

void TypeInfo::InternalSwap(TypeInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TypeInfo, primitivetype_)
      + sizeof(TypeInfo::primitivetype_)
      - PROTOBUF_FIELD_OFFSET(TypeInfo, classinfo_)>(
          reinterpret_cast<char*>(&classinfo_),
          reinterpret_cast<char*>(&other->classinfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TypeInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_qrue_2eproto_getter, &descriptor_table_qrue_2eproto_once,
      file_level_metadata_qrue_2eproto[1]);
}

// ===================================================================

class Il2CppFieldInfo::_Internal {
 public:
  static const ::Il2CppData& type(const Il2CppFieldInfo* msg);
};

const ::Il2CppData&
Il2CppFieldInfo::_Internal::type(const Il2CppFieldInfo* msg) {
  return *msg->type_;
}
Il2CppFieldInfo::Il2CppFieldInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Il2CppFieldInfo)
}
Il2CppFieldInfo::Il2CppFieldInfo(const Il2CppFieldInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_type()) {
    type_ = new ::Il2CppData(*from.type_);
  } else {
    type_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Il2CppFieldInfo)
}

inline void Il2CppFieldInfo::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
type_ = nullptr;
}

Il2CppFieldInfo::~Il2CppFieldInfo() {
  // @@protoc_insertion_point(destructor:Il2CppFieldInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Il2CppFieldInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete type_;
}

void Il2CppFieldInfo::ArenaDtor(void* object) {
  Il2CppFieldInfo* _this = reinterpret_cast< Il2CppFieldInfo* >(object);
  (void)_this;
}
void Il2CppFieldInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Il2CppFieldInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Il2CppFieldInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Il2CppFieldInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && type_ != nullptr) {
    delete type_;
  }
  type_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Il2CppFieldInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Il2CppFieldInfo.name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Il2CppFieldInfo.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Il2CppData type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Il2CppFieldInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Il2CppFieldInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Il2CppFieldInfo.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string id = 2;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Il2CppFieldInfo.id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_id(), target);
  }

  // .Il2CppData type = 3;
  if (this->_internal_has_type()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::type(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Il2CppFieldInfo)
  return target;
}

size_t Il2CppFieldInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Il2CppFieldInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string id = 2;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // .Il2CppData type = 3;
  if (this->_internal_has_type()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *type_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Il2CppFieldInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Il2CppFieldInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Il2CppFieldInfo::GetClassData() const { return &_class_data_; }

void Il2CppFieldInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Il2CppFieldInfo *>(to)->MergeFrom(
      static_cast<const Il2CppFieldInfo &>(from));
}


void Il2CppFieldInfo::MergeFrom(const Il2CppFieldInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Il2CppFieldInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (from._internal_has_type()) {
    _internal_mutable_type()->::Il2CppData::MergeFrom(from._internal_type());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Il2CppFieldInfo::CopyFrom(const Il2CppFieldInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Il2CppFieldInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Il2CppFieldInfo::IsInitialized() const {
  return true;
}

void Il2CppFieldInfo::InternalSwap(Il2CppFieldInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Il2CppFieldInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_qrue_2eproto_getter, &descriptor_table_qrue_2eproto_once,
      file_level_metadata_qrue_2eproto[2]);
}

// ===================================================================

class Il2CppPropertyInfo::_Internal {
 public:
  static const ::Il2CppData& type(const Il2CppPropertyInfo* msg);
};

const ::Il2CppData&
Il2CppPropertyInfo::_Internal::type(const Il2CppPropertyInfo* msg) {
  return *msg->type_;
}
Il2CppPropertyInfo::Il2CppPropertyInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Il2CppPropertyInfo)
}
Il2CppPropertyInfo::Il2CppPropertyInfo(const Il2CppPropertyInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_type()) {
    type_ = new ::Il2CppData(*from.type_);
  } else {
    type_ = nullptr;
  }
  ::memcpy(&hasget_, &from.hasget_,
    static_cast<size_t>(reinterpret_cast<char*>(&hasset_) -
    reinterpret_cast<char*>(&hasget_)) + sizeof(hasset_));
  // @@protoc_insertion_point(copy_constructor:Il2CppPropertyInfo)
}

inline void Il2CppPropertyInfo::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&type_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&hasset_) -
    reinterpret_cast<char*>(&type_)) + sizeof(hasset_));
}

Il2CppPropertyInfo::~Il2CppPropertyInfo() {
  // @@protoc_insertion_point(destructor:Il2CppPropertyInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Il2CppPropertyInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete type_;
}

void Il2CppPropertyInfo::ArenaDtor(void* object) {
  Il2CppPropertyInfo* _this = reinterpret_cast< Il2CppPropertyInfo* >(object);
  (void)_this;
}
void Il2CppPropertyInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Il2CppPropertyInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Il2CppPropertyInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Il2CppPropertyInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  id_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && type_ != nullptr) {
    delete type_;
  }
  type_ = nullptr;
  ::memset(&hasget_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hasset_) -
      reinterpret_cast<char*>(&hasget_)) + sizeof(hasset_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Il2CppPropertyInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Il2CppPropertyInfo.name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Il2CppPropertyInfo.id"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool hasGet = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          hasget_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool hasSet = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          hasset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Il2CppData type = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_type(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Il2CppPropertyInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Il2CppPropertyInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Il2CppPropertyInfo.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string id = 2;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Il2CppPropertyInfo.id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_id(), target);
  }

  // bool hasGet = 3;
  if (this->_internal_hasget() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_hasget(), target);
  }

  // bool hasSet = 4;
  if (this->_internal_hasset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_hasset(), target);
  }

  // .Il2CppData type = 5;
  if (this->_internal_has_type()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::type(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Il2CppPropertyInfo)
  return target;
}

size_t Il2CppPropertyInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Il2CppPropertyInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string id = 2;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // .Il2CppData type = 5;
  if (this->_internal_has_type()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *type_);
  }

  // bool hasGet = 3;
  if (this->_internal_hasget() != 0) {
    total_size += 1 + 1;
  }

  // bool hasSet = 4;
  if (this->_internal_hasset() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Il2CppPropertyInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Il2CppPropertyInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Il2CppPropertyInfo::GetClassData() const { return &_class_data_; }

void Il2CppPropertyInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Il2CppPropertyInfo *>(to)->MergeFrom(
      static_cast<const Il2CppPropertyInfo &>(from));
}


void Il2CppPropertyInfo::MergeFrom(const Il2CppPropertyInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Il2CppPropertyInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (!from._internal_id().empty()) {
    _internal_set_id(from._internal_id());
  }
  if (from._internal_has_type()) {
    _internal_mutable_type()->::Il2CppData::MergeFrom(from._internal_type());
  }
  if (from._internal_hasget() != 0) {
    _internal_set_hasget(from._internal_hasget());
  }
  if (from._internal_hasset() != 0) {
    _internal_set_hasset(from._internal_hasset());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Il2CppPropertyInfo::CopyFrom(const Il2CppPropertyInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Il2CppPropertyInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Il2CppPropertyInfo::IsInitialized() const {
  return true;
}

void Il2CppPropertyInfo::InternalSwap(Il2CppPropertyInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &id_, lhs_arena,
      &other->id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Il2CppPropertyInfo, hasset_)
      + sizeof(Il2CppPropertyInfo::hasset_)
      - PROTOBUF_FIELD_OFFSET(Il2CppPropertyInfo, type_)>(
          reinterpret_cast<char*>(&type_),
          reinterpret_cast<char*>(&other->type_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Il2CppPropertyInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_qrue_2eproto_getter, &descriptor_table_qrue_2eproto_once,
      file_level_metadata_qrue_2eproto[3]);
}

// ===================================================================

class Il2CppMethodInfo::_Internal {
 public:
};

Il2CppMethodInfo::Il2CppMethodInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  argnames_(arena),
  argtypes_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Il2CppMethodInfo)
}
Il2CppMethodInfo::Il2CppMethodInfo(const Il2CppMethodInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      argnames_(from.argnames_),
      argtypes_(from.argtypes_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:Il2CppMethodInfo)
}

inline void Il2CppMethodInfo::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
id_ = uint64_t{0u};
}

Il2CppMethodInfo::~Il2CppMethodInfo() {
  // @@protoc_insertion_point(destructor:Il2CppMethodInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Il2CppMethodInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Il2CppMethodInfo::ArenaDtor(void* object) {
  Il2CppMethodInfo* _this = reinterpret_cast< Il2CppMethodInfo* >(object);
  (void)_this;
}
void Il2CppMethodInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Il2CppMethodInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Il2CppMethodInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Il2CppMethodInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  argnames_.Clear();
  argtypes_.Clear();
  name_.ClearToEmpty();
  id_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Il2CppMethodInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Il2CppMethodInfo.name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string argNames = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_argnames();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Il2CppMethodInfo.argNames"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .Il2CppData argTypes = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_argtypes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Il2CppMethodInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Il2CppMethodInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Il2CppMethodInfo.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // uint64 id = 2;
  if (this->_internal_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_id(), target);
  }

  // repeated string argNames = 3;
  for (int i = 0, n = this->_internal_argnames_size(); i < n; i++) {
    const auto& s = this->_internal_argnames(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Il2CppMethodInfo.argNames");
    target = stream->WriteString(3, s, target);
  }

  // repeated .Il2CppData argTypes = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_argtypes_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_argtypes(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Il2CppMethodInfo)
  return target;
}

size_t Il2CppMethodInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Il2CppMethodInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string argNames = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(argnames_.size());
  for (int i = 0, n = argnames_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      argnames_.Get(i));
  }

  // repeated .Il2CppData argTypes = 4;
  total_size += 1UL * this->_internal_argtypes_size();
  for (const auto& msg : this->argtypes_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // uint64 id = 2;
  if (this->_internal_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Il2CppMethodInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Il2CppMethodInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Il2CppMethodInfo::GetClassData() const { return &_class_data_; }

void Il2CppMethodInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Il2CppMethodInfo *>(to)->MergeFrom(
      static_cast<const Il2CppMethodInfo &>(from));
}


void Il2CppMethodInfo::MergeFrom(const Il2CppMethodInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Il2CppMethodInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  argnames_.MergeFrom(from.argnames_);
  argtypes_.MergeFrom(from.argtypes_);
  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_id() != 0) {
    _internal_set_id(from._internal_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Il2CppMethodInfo::CopyFrom(const Il2CppMethodInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Il2CppMethodInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Il2CppMethodInfo::IsInitialized() const {
  return true;
}

void Il2CppMethodInfo::InternalSwap(Il2CppMethodInfo* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  argnames_.InternalSwap(&other->argnames_);
  argtypes_.InternalSwap(&other->argtypes_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Il2CppMethodInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_qrue_2eproto_getter, &descriptor_table_qrue_2eproto_once,
      file_level_metadata_qrue_2eproto[4]);
}

// ===================================================================

class Il2CppType::_Internal {
 public:
  static const ::Il2CppType& parent(const Il2CppType* msg);
};

const ::Il2CppType&
Il2CppType::_Internal::parent(const Il2CppType* msg) {
  return *msg->parent_;
}
Il2CppType::Il2CppType(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  generics_(arena),
  interfaces_(arena),
  fields_(arena),
  properties_(arena),
  methods_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Il2CppType)
}
Il2CppType::Il2CppType(const Il2CppType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      generics_(from.generics_),
      interfaces_(from.interfaces_),
      fields_(from.fields_),
      properties_(from.properties_),
      methods_(from.methods_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  namespaze_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    namespaze_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_namespaze().empty()) {
    namespaze_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_namespaze(), 
      GetArenaForAllocation());
  }
  clazz_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    clazz_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_clazz().empty()) {
    clazz_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_clazz(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_parent()) {
    parent_ = new ::Il2CppType(*from.parent_);
  } else {
    parent_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Il2CppType)
}

inline void Il2CppType::SharedCtor() {
namespaze_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  namespaze_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
clazz_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  clazz_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
parent_ = nullptr;
}

Il2CppType::~Il2CppType() {
  // @@protoc_insertion_point(destructor:Il2CppType)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Il2CppType::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  namespaze_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clazz_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete parent_;
}

void Il2CppType::ArenaDtor(void* object) {
  Il2CppType* _this = reinterpret_cast< Il2CppType* >(object);
  (void)_this;
}
void Il2CppType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Il2CppType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Il2CppType::Clear() {
// @@protoc_insertion_point(message_clear_start:Il2CppType)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  generics_.Clear();
  interfaces_.Clear();
  fields_.Clear();
  properties_.Clear();
  methods_.Clear();
  namespaze_.ClearToEmpty();
  clazz_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && parent_ != nullptr) {
    delete parent_;
  }
  parent_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Il2CppType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string namespaze = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_namespaze();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Il2CppType.namespaze"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string clazz = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_clazz();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Il2CppType.clazz"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .Il2CppClassInfo generics = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_generics(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .Il2CppType parent = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_parent(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .Il2CppType interfaces = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_interfaces(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .Il2CppFieldInfo fields = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_fields(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .Il2CppPropertyInfo properties = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_properties(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .Il2CppMethodInfo methods = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_methods(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Il2CppType::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Il2CppType)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string namespaze = 1;
  if (!this->_internal_namespaze().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_namespaze().data(), static_cast<int>(this->_internal_namespaze().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Il2CppType.namespaze");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_namespaze(), target);
  }

  // string clazz = 2;
  if (!this->_internal_clazz().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_clazz().data(), static_cast<int>(this->_internal_clazz().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Il2CppType.clazz");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_clazz(), target);
  }

  // repeated .Il2CppClassInfo generics = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_generics_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_generics(i), target, stream);
  }

  // .Il2CppType parent = 4;
  if (this->_internal_has_parent()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::parent(this), target, stream);
  }

  // repeated .Il2CppType interfaces = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_interfaces_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_interfaces(i), target, stream);
  }

  // repeated .Il2CppFieldInfo fields = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_fields_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, this->_internal_fields(i), target, stream);
  }

  // repeated .Il2CppPropertyInfo properties = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_properties_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, this->_internal_properties(i), target, stream);
  }

  // repeated .Il2CppMethodInfo methods = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_methods_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, this->_internal_methods(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Il2CppType)
  return target;
}

size_t Il2CppType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Il2CppType)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Il2CppClassInfo generics = 3;
  total_size += 1UL * this->_internal_generics_size();
  for (const auto& msg : this->generics_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .Il2CppType interfaces = 5;
  total_size += 1UL * this->_internal_interfaces_size();
  for (const auto& msg : this->interfaces_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .Il2CppFieldInfo fields = 6;
  total_size += 1UL * this->_internal_fields_size();
  for (const auto& msg : this->fields_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .Il2CppPropertyInfo properties = 7;
  total_size += 1UL * this->_internal_properties_size();
  for (const auto& msg : this->properties_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .Il2CppMethodInfo methods = 8;
  total_size += 1UL * this->_internal_methods_size();
  for (const auto& msg : this->methods_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string namespaze = 1;
  if (!this->_internal_namespaze().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_namespaze());
  }

  // string clazz = 2;
  if (!this->_internal_clazz().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_clazz());
  }

  // .Il2CppType parent = 4;
  if (this->_internal_has_parent()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *parent_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Il2CppType::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Il2CppType::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Il2CppType::GetClassData() const { return &_class_data_; }

void Il2CppType::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Il2CppType *>(to)->MergeFrom(
      static_cast<const Il2CppType &>(from));
}


void Il2CppType::MergeFrom(const Il2CppType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Il2CppType)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  generics_.MergeFrom(from.generics_);
  interfaces_.MergeFrom(from.interfaces_);
  fields_.MergeFrom(from.fields_);
  properties_.MergeFrom(from.properties_);
  methods_.MergeFrom(from.methods_);
  if (!from._internal_namespaze().empty()) {
    _internal_set_namespaze(from._internal_namespaze());
  }
  if (!from._internal_clazz().empty()) {
    _internal_set_clazz(from._internal_clazz());
  }
  if (from._internal_has_parent()) {
    _internal_mutable_parent()->::Il2CppType::MergeFrom(from._internal_parent());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Il2CppType::CopyFrom(const Il2CppType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Il2CppType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Il2CppType::IsInitialized() const {
  return true;
}

void Il2CppType::InternalSwap(Il2CppType* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  generics_.InternalSwap(&other->generics_);
  interfaces_.InternalSwap(&other->interfaces_);
  fields_.InternalSwap(&other->fields_);
  properties_.InternalSwap(&other->properties_);
  methods_.InternalSwap(&other->methods_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &namespaze_, lhs_arena,
      &other->namespaze_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &clazz_, lhs_arena,
      &other->clazz_, rhs_arena
  );
  swap(parent_, other->parent_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Il2CppType::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_qrue_2eproto_getter, &descriptor_table_qrue_2eproto_once,
      file_level_metadata_qrue_2eproto[5]);
}

// ===================================================================

class Il2CppData::_Internal {
 public:
  static const ::Il2CppClassInfo& typeinfo(const Il2CppData* msg);
};

const ::Il2CppClassInfo&
Il2CppData::_Internal::typeinfo(const Il2CppData* msg) {
  return *msg->typeinfo_;
}
Il2CppData::Il2CppData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Il2CppData)
}
Il2CppData::Il2CppData(const Il2CppData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data().empty()) {
    data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_data(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_typeinfo()) {
    typeinfo_ = new ::Il2CppClassInfo(*from.typeinfo_);
  } else {
    typeinfo_ = nullptr;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:Il2CppData)
}

inline void Il2CppData::SharedCtor() {
data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&typeinfo_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&typeinfo_)) + sizeof(type_));
}

Il2CppData::~Il2CppData() {
  // @@protoc_insertion_point(destructor:Il2CppData)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Il2CppData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete typeinfo_;
}

void Il2CppData::ArenaDtor(void* object) {
  Il2CppData* _this = reinterpret_cast< Il2CppData* >(object);
  (void)_this;
}
void Il2CppData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Il2CppData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Il2CppData::Clear() {
// @@protoc_insertion_point(message_clear_start:Il2CppData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && typeinfo_ != nullptr) {
    delete typeinfo_;
  }
  typeinfo_ = nullptr;
  type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Il2CppData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Il2CppData.Type type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::Il2CppData_Type>(val));
        } else
          goto handle_unusual;
        continue;
      // .Il2CppClassInfo typeInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_typeinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Il2CppData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Il2CppData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Il2CppData.Type type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  // .Il2CppClassInfo typeInfo = 2;
  if (this->_internal_has_typeinfo()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::typeinfo(this), target, stream);
  }

  // bytes data = 3;
  if (!this->_internal_data().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Il2CppData)
  return target;
}

size_t Il2CppData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Il2CppData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 3;
  if (!this->_internal_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // .Il2CppClassInfo typeInfo = 2;
  if (this->_internal_has_typeinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *typeinfo_);
  }

  // .Il2CppData.Type type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Il2CppData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Il2CppData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Il2CppData::GetClassData() const { return &_class_data_; }

void Il2CppData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Il2CppData *>(to)->MergeFrom(
      static_cast<const Il2CppData &>(from));
}


void Il2CppData::MergeFrom(const Il2CppData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Il2CppData)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _internal_set_data(from._internal_data());
  }
  if (from._internal_has_typeinfo()) {
    _internal_mutable_typeinfo()->::Il2CppClassInfo::MergeFrom(from._internal_typeinfo());
  }
  if (from._internal_type() != 0) {
    _internal_set_type(from._internal_type());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Il2CppData::CopyFrom(const Il2CppData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Il2CppData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Il2CppData::IsInitialized() const {
  return true;
}

void Il2CppData::InternalSwap(Il2CppData* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &data_, lhs_arena,
      &other->data_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Il2CppData, type_)
      + sizeof(Il2CppData::type_)
      - PROTOBUF_FIELD_OFFSET(Il2CppData, typeinfo_)>(
          reinterpret_cast<char*>(&typeinfo_),
          reinterpret_cast<char*>(&other->typeinfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Il2CppData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_qrue_2eproto_getter, &descriptor_table_qrue_2eproto_once,
      file_level_metadata_qrue_2eproto[6]);
}

// ===================================================================

class InvokeMethod::_Internal {
 public:
};

InvokeMethod::InvokeMethod(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  args_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:InvokeMethod)
}
InvokeMethod::InvokeMethod(const InvokeMethod& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      args_(from.args_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&methodid_, &from.methodid_,
    static_cast<size_t>(reinterpret_cast<char*>(&invokeuuid_) -
    reinterpret_cast<char*>(&methodid_)) + sizeof(invokeuuid_));
  // @@protoc_insertion_point(copy_constructor:InvokeMethod)
}

inline void InvokeMethod::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&methodid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&invokeuuid_) -
    reinterpret_cast<char*>(&methodid_)) + sizeof(invokeuuid_));
}

InvokeMethod::~InvokeMethod() {
  // @@protoc_insertion_point(destructor:InvokeMethod)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void InvokeMethod::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void InvokeMethod::ArenaDtor(void* object) {
  InvokeMethod* _this = reinterpret_cast< InvokeMethod* >(object);
  (void)_this;
}
void InvokeMethod::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InvokeMethod::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InvokeMethod::Clear() {
// @@protoc_insertion_point(message_clear_start:InvokeMethod)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  args_.Clear();
  ::memset(&methodid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&invokeuuid_) -
      reinterpret_cast<char*>(&methodid_)) + sizeof(invokeuuid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InvokeMethod::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 methodId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          methodid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 invokeUUID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          invokeuuid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .Il2CppData args = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_args(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InvokeMethod::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:InvokeMethod)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 methodId = 1;
  if (this->_internal_methodid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_methodid(), target);
  }

  // uint64 invokeUUID = 2;
  if (this->_internal_invokeuuid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_invokeuuid(), target);
  }

  // repeated .Il2CppData args = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_args_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_args(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InvokeMethod)
  return target;
}

size_t InvokeMethod::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:InvokeMethod)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Il2CppData args = 3;
  total_size += 1UL * this->_internal_args_size();
  for (const auto& msg : this->args_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // uint64 methodId = 1;
  if (this->_internal_methodid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_methodid());
  }

  // uint64 invokeUUID = 2;
  if (this->_internal_invokeuuid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_invokeuuid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InvokeMethod::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InvokeMethod::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InvokeMethod::GetClassData() const { return &_class_data_; }

void InvokeMethod::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InvokeMethod *>(to)->MergeFrom(
      static_cast<const InvokeMethod &>(from));
}


void InvokeMethod::MergeFrom(const InvokeMethod& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:InvokeMethod)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  args_.MergeFrom(from.args_);
  if (from._internal_methodid() != 0) {
    _internal_set_methodid(from._internal_methodid());
  }
  if (from._internal_invokeuuid() != 0) {
    _internal_set_invokeuuid(from._internal_invokeuuid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InvokeMethod::CopyFrom(const InvokeMethod& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:InvokeMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvokeMethod::IsInitialized() const {
  return true;
}

void InvokeMethod::InternalSwap(InvokeMethod* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  args_.InternalSwap(&other->args_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InvokeMethod, invokeuuid_)
      + sizeof(InvokeMethod::invokeuuid_)
      - PROTOBUF_FIELD_OFFSET(InvokeMethod, methodid_)>(
          reinterpret_cast<char*>(&methodid_),
          reinterpret_cast<char*>(&other->methodid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InvokeMethod::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_qrue_2eproto_getter, &descriptor_table_qrue_2eproto_once,
      file_level_metadata_qrue_2eproto[7]);
}

// ===================================================================

class InvokeMethodResult::_Internal {
 public:
  static const ::Il2CppData& result(const InvokeMethodResult* msg);
};

const ::Il2CppData&
InvokeMethodResult::_Internal::result(const InvokeMethodResult* msg) {
  return *msg->result_;
}
InvokeMethodResult::InvokeMethodResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:InvokeMethodResult)
}
InvokeMethodResult::InvokeMethodResult(const InvokeMethodResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  error_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    error_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error().empty()) {
    error_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_error(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_result()) {
    result_ = new ::Il2CppData(*from.result_);
  } else {
    result_ = nullptr;
  }
  ::memcpy(&methodid_, &from.methodid_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&methodid_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:InvokeMethodResult)
}

inline void InvokeMethodResult::SharedCtor() {
error_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  error_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&result_)) + sizeof(status_));
}

InvokeMethodResult::~InvokeMethodResult() {
  // @@protoc_insertion_point(destructor:InvokeMethodResult)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void InvokeMethodResult::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  error_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
}

void InvokeMethodResult::ArenaDtor(void* object) {
  InvokeMethodResult* _this = reinterpret_cast< InvokeMethodResult* >(object);
  (void)_this;
}
void InvokeMethodResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void InvokeMethodResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InvokeMethodResult::Clear() {
// @@protoc_insertion_point(message_clear_start:InvokeMethodResult)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && result_ != nullptr) {
    delete result_;
  }
  result_ = nullptr;
  ::memset(&methodid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&methodid_)) + sizeof(status_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InvokeMethodResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .InvokeMethodResult.Status status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_status(static_cast<::InvokeMethodResult_Status>(val));
        } else
          goto handle_unusual;
        continue;
      // uint64 methodId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          methodid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 invokeUUID = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          invokeuuid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Il2CppData result = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string error = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_error();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "InvokeMethodResult.error"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InvokeMethodResult::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:InvokeMethodResult)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .InvokeMethodResult.Status status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_status(), target);
  }

  // uint64 methodId = 2;
  if (this->_internal_methodid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_methodid(), target);
  }

  // uint64 invokeUUID = 3;
  if (this->_internal_invokeuuid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_invokeuuid(), target);
  }

  // .Il2CppData result = 4;
  if (this->_internal_has_result()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::result(this), target, stream);
  }

  // string error = 5;
  if (!this->_internal_error().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "InvokeMethodResult.error");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:InvokeMethodResult)
  return target;
}

size_t InvokeMethodResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:InvokeMethodResult)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error = 5;
  if (!this->_internal_error().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error());
  }

  // .Il2CppData result = 4;
  if (this->_internal_has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *result_);
  }

  // uint64 methodId = 2;
  if (this->_internal_methodid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_methodid());
  }

  // uint64 invokeUUID = 3;
  if (this->_internal_invokeuuid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_invokeuuid());
  }

  // .InvokeMethodResult.Status status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InvokeMethodResult::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InvokeMethodResult::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InvokeMethodResult::GetClassData() const { return &_class_data_; }

void InvokeMethodResult::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InvokeMethodResult *>(to)->MergeFrom(
      static_cast<const InvokeMethodResult &>(from));
}


void InvokeMethodResult::MergeFrom(const InvokeMethodResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:InvokeMethodResult)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_error().empty()) {
    _internal_set_error(from._internal_error());
  }
  if (from._internal_has_result()) {
    _internal_mutable_result()->::Il2CppData::MergeFrom(from._internal_result());
  }
  if (from._internal_methodid() != 0) {
    _internal_set_methodid(from._internal_methodid());
  }
  if (from._internal_invokeuuid() != 0) {
    _internal_set_invokeuuid(from._internal_invokeuuid());
  }
  if (from._internal_status() != 0) {
    _internal_set_status(from._internal_status());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InvokeMethodResult::CopyFrom(const InvokeMethodResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:InvokeMethodResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InvokeMethodResult::IsInitialized() const {
  return true;
}

void InvokeMethodResult::InternalSwap(InvokeMethodResult* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &error_, lhs_arena,
      &other->error_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InvokeMethodResult, status_)
      + sizeof(InvokeMethodResult::status_)
      - PROTOBUF_FIELD_OFFSET(InvokeMethodResult, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InvokeMethodResult::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_qrue_2eproto_getter, &descriptor_table_qrue_2eproto_once,
      file_level_metadata_qrue_2eproto[8]);
}

// ===================================================================

class SearchObjects::_Internal {
 public:
  static const ::Il2CppClassInfo& requiredcomponent(const SearchObjects* msg);
};

const ::Il2CppClassInfo&
SearchObjects::_Internal::requiredcomponent(const SearchObjects* msg) {
  return *msg->requiredcomponent_;
}
SearchObjects::SearchObjects(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:SearchObjects)
}
SearchObjects::SearchObjects(const SearchObjects& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  objectname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    objectname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_objectname().empty()) {
    objectname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_objectname(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_requiredcomponent()) {
    requiredcomponent_ = new ::Il2CppClassInfo(*from.requiredcomponent_);
  } else {
    requiredcomponent_ = nullptr;
  }
  queryid_ = from.queryid_;
  // @@protoc_insertion_point(copy_constructor:SearchObjects)
}

inline void SearchObjects::SharedCtor() {
objectname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  objectname_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&requiredcomponent_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&queryid_) -
    reinterpret_cast<char*>(&requiredcomponent_)) + sizeof(queryid_));
}

SearchObjects::~SearchObjects() {
  // @@protoc_insertion_point(destructor:SearchObjects)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SearchObjects::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  objectname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete requiredcomponent_;
}

void SearchObjects::ArenaDtor(void* object) {
  SearchObjects* _this = reinterpret_cast< SearchObjects* >(object);
  (void)_this;
}
void SearchObjects::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SearchObjects::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SearchObjects::Clear() {
// @@protoc_insertion_point(message_clear_start:SearchObjects)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objectname_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && requiredcomponent_ != nullptr) {
    delete requiredcomponent_;
  }
  requiredcomponent_ = nullptr;
  queryid_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SearchObjects::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 queryId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          queryid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string objectName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_objectname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "SearchObjects.objectName"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Il2CppClassInfo requiredComponent = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_requiredcomponent(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SearchObjects::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SearchObjects)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 queryId = 1;
  if (this->_internal_queryid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_queryid(), target);
  }

  // string objectName = 2;
  if (!this->_internal_objectname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_objectname().data(), static_cast<int>(this->_internal_objectname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SearchObjects.objectName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_objectname(), target);
  }

  // .Il2CppClassInfo requiredComponent = 3;
  if (this->_internal_has_requiredcomponent()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::requiredcomponent(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SearchObjects)
  return target;
}

size_t SearchObjects::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SearchObjects)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string objectName = 2;
  if (!this->_internal_objectname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_objectname());
  }

  // .Il2CppClassInfo requiredComponent = 3;
  if (this->_internal_has_requiredcomponent()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *requiredcomponent_);
  }

  // uint64 queryId = 1;
  if (this->_internal_queryid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_queryid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SearchObjects::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SearchObjects::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SearchObjects::GetClassData() const { return &_class_data_; }

void SearchObjects::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SearchObjects *>(to)->MergeFrom(
      static_cast<const SearchObjects &>(from));
}


void SearchObjects::MergeFrom(const SearchObjects& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SearchObjects)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_objectname().empty()) {
    _internal_set_objectname(from._internal_objectname());
  }
  if (from._internal_has_requiredcomponent()) {
    _internal_mutable_requiredcomponent()->::Il2CppClassInfo::MergeFrom(from._internal_requiredcomponent());
  }
  if (from._internal_queryid() != 0) {
    _internal_set_queryid(from._internal_queryid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SearchObjects::CopyFrom(const SearchObjects& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SearchObjects)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchObjects::IsInitialized() const {
  return true;
}

void SearchObjects::InternalSwap(SearchObjects* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &objectname_, lhs_arena,
      &other->objectname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SearchObjects, queryid_)
      + sizeof(SearchObjects::queryid_)
      - PROTOBUF_FIELD_OFFSET(SearchObjects, requiredcomponent_)>(
          reinterpret_cast<char*>(&requiredcomponent_),
          reinterpret_cast<char*>(&other->requiredcomponent_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SearchObjects::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_qrue_2eproto_getter, &descriptor_table_qrue_2eproto_once,
      file_level_metadata_qrue_2eproto[9]);
}

// ===================================================================

class SearchObjectsResult::_Internal {
 public:
};

SearchObjectsResult::SearchObjectsResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  foundobjects_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:SearchObjectsResult)
}
SearchObjectsResult::SearchObjectsResult(const SearchObjectsResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      foundobjects_(from.foundobjects_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  queryid_ = from.queryid_;
  // @@protoc_insertion_point(copy_constructor:SearchObjectsResult)
}

inline void SearchObjectsResult::SharedCtor() {
queryid_ = uint64_t{0u};
}

SearchObjectsResult::~SearchObjectsResult() {
  // @@protoc_insertion_point(destructor:SearchObjectsResult)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SearchObjectsResult::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SearchObjectsResult::ArenaDtor(void* object) {
  SearchObjectsResult* _this = reinterpret_cast< SearchObjectsResult* >(object);
  (void)_this;
}
void SearchObjectsResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SearchObjectsResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SearchObjectsResult::Clear() {
// @@protoc_insertion_point(message_clear_start:SearchObjectsResult)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  foundobjects_.Clear();
  queryid_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SearchObjectsResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 queryId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          queryid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string foundObjects = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_foundobjects();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "SearchObjectsResult.foundObjects"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SearchObjectsResult::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SearchObjectsResult)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 queryId = 1;
  if (this->_internal_queryid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_queryid(), target);
  }

  // repeated string foundObjects = 2;
  for (int i = 0, n = this->_internal_foundobjects_size(); i < n; i++) {
    const auto& s = this->_internal_foundobjects(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SearchObjectsResult.foundObjects");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SearchObjectsResult)
  return target;
}

size_t SearchObjectsResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SearchObjectsResult)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string foundObjects = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(foundobjects_.size());
  for (int i = 0, n = foundobjects_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      foundobjects_.Get(i));
  }

  // uint64 queryId = 1;
  if (this->_internal_queryid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_queryid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SearchObjectsResult::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SearchObjectsResult::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SearchObjectsResult::GetClassData() const { return &_class_data_; }

void SearchObjectsResult::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SearchObjectsResult *>(to)->MergeFrom(
      static_cast<const SearchObjectsResult &>(from));
}


void SearchObjectsResult::MergeFrom(const SearchObjectsResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SearchObjectsResult)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  foundobjects_.MergeFrom(from.foundobjects_);
  if (from._internal_queryid() != 0) {
    _internal_set_queryid(from._internal_queryid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SearchObjectsResult::CopyFrom(const SearchObjectsResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SearchObjectsResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchObjectsResult::IsInitialized() const {
  return true;
}

void SearchObjectsResult::InternalSwap(SearchObjectsResult* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  foundobjects_.InternalSwap(&other->foundobjects_);
  swap(queryid_, other->queryid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SearchObjectsResult::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_qrue_2eproto_getter, &descriptor_table_qrue_2eproto_once,
      file_level_metadata_qrue_2eproto[10]);
}

// ===================================================================

class LoadObject::_Internal {
 public:
};

LoadObject::LoadObject(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:LoadObject)
}
LoadObject::LoadObject(const LoadObject& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  pointer_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    pointer_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pointer().empty()) {
    pointer_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_pointer(), 
      GetArenaForAllocation());
  }
  loadid_ = from.loadid_;
  // @@protoc_insertion_point(copy_constructor:LoadObject)
}

inline void LoadObject::SharedCtor() {
pointer_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  pointer_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
loadid_ = uint64_t{0u};
}

LoadObject::~LoadObject() {
  // @@protoc_insertion_point(destructor:LoadObject)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void LoadObject::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  pointer_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void LoadObject::ArenaDtor(void* object) {
  LoadObject* _this = reinterpret_cast< LoadObject* >(object);
  (void)_this;
}
void LoadObject::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LoadObject::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LoadObject::Clear() {
// @@protoc_insertion_point(message_clear_start:LoadObject)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pointer_.ClearToEmpty();
  loadid_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoadObject::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 loadId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          loadid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes pointer = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_pointer();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LoadObject::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:LoadObject)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 loadId = 1;
  if (this->_internal_loadid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_loadid(), target);
  }

  // bytes pointer = 2;
  if (!this->_internal_pointer().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_pointer(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LoadObject)
  return target;
}

size_t LoadObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LoadObject)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes pointer = 2;
  if (!this->_internal_pointer().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_pointer());
  }

  // uint64 loadId = 1;
  if (this->_internal_loadid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_loadid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LoadObject::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    LoadObject::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LoadObject::GetClassData() const { return &_class_data_; }

void LoadObject::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<LoadObject *>(to)->MergeFrom(
      static_cast<const LoadObject &>(from));
}


void LoadObject::MergeFrom(const LoadObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LoadObject)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_pointer().empty()) {
    _internal_set_pointer(from._internal_pointer());
  }
  if (from._internal_loadid() != 0) {
    _internal_set_loadid(from._internal_loadid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LoadObject::CopyFrom(const LoadObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LoadObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadObject::IsInitialized() const {
  return true;
}

void LoadObject::InternalSwap(LoadObject* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &pointer_, lhs_arena,
      &other->pointer_, rhs_arena
  );
  swap(loadid_, other->loadid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LoadObject::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_qrue_2eproto_getter, &descriptor_table_qrue_2eproto_once,
      file_level_metadata_qrue_2eproto[11]);
}

// ===================================================================

class LoadObjectResult::_Internal {
 public:
  static const ::Il2CppType& object(const LoadObjectResult* msg);
};

const ::Il2CppType&
LoadObjectResult::_Internal::object(const LoadObjectResult* msg) {
  return *msg->object_;
}
LoadObjectResult::LoadObjectResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:LoadObjectResult)
}
LoadObjectResult::LoadObjectResult(const LoadObjectResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_object()) {
    object_ = new ::Il2CppType(*from.object_);
  } else {
    object_ = nullptr;
  }
  loadid_ = from.loadid_;
  // @@protoc_insertion_point(copy_constructor:LoadObjectResult)
}

inline void LoadObjectResult::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&object_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&loadid_) -
    reinterpret_cast<char*>(&object_)) + sizeof(loadid_));
}

LoadObjectResult::~LoadObjectResult() {
  // @@protoc_insertion_point(destructor:LoadObjectResult)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void LoadObjectResult::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete object_;
}

void LoadObjectResult::ArenaDtor(void* object) {
  LoadObjectResult* _this = reinterpret_cast< LoadObjectResult* >(object);
  (void)_this;
}
void LoadObjectResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LoadObjectResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LoadObjectResult::Clear() {
// @@protoc_insertion_point(message_clear_start:LoadObjectResult)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && object_ != nullptr) {
    delete object_;
  }
  object_ = nullptr;
  loadid_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LoadObjectResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 loadId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          loadid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Il2CppType object = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_object(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LoadObjectResult::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:LoadObjectResult)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 loadId = 1;
  if (this->_internal_loadid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_loadid(), target);
  }

  // .Il2CppType object = 2;
  if (this->_internal_has_object()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::object(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LoadObjectResult)
  return target;
}

size_t LoadObjectResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LoadObjectResult)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Il2CppType object = 2;
  if (this->_internal_has_object()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *object_);
  }

  // uint64 loadId = 1;
  if (this->_internal_loadid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_loadid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LoadObjectResult::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    LoadObjectResult::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LoadObjectResult::GetClassData() const { return &_class_data_; }

void LoadObjectResult::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<LoadObjectResult *>(to)->MergeFrom(
      static_cast<const LoadObjectResult &>(from));
}


void LoadObjectResult::MergeFrom(const LoadObjectResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:LoadObjectResult)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_object()) {
    _internal_mutable_object()->::Il2CppType::MergeFrom(from._internal_object());
  }
  if (from._internal_loadid() != 0) {
    _internal_set_loadid(from._internal_loadid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LoadObjectResult::CopyFrom(const LoadObjectResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LoadObjectResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadObjectResult::IsInitialized() const {
  return true;
}

void LoadObjectResult::InternalSwap(LoadObjectResult* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LoadObjectResult, loadid_)
      + sizeof(LoadObjectResult::loadid_)
      - PROTOBUF_FIELD_OFFSET(LoadObjectResult, object_)>(
          reinterpret_cast<char*>(&object_),
          reinterpret_cast<char*>(&other->object_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LoadObjectResult::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_qrue_2eproto_getter, &descriptor_table_qrue_2eproto_once,
      file_level_metadata_qrue_2eproto[12]);
}

// ===================================================================

class PacketWrapper::_Internal {
 public:
  static const ::InvokeMethod& invokemethod(const PacketWrapper* msg);
  static const ::InvokeMethodResult& invokemethodresult(const PacketWrapper* msg);
  static const ::SearchObjects& searchobjects(const PacketWrapper* msg);
  static const ::SearchObjectsResult& searchobjectsresult(const PacketWrapper* msg);
  static const ::LoadObject& loadobject(const PacketWrapper* msg);
  static const ::LoadObjectResult& loadobjectresult(const PacketWrapper* msg);
};

const ::InvokeMethod&
PacketWrapper::_Internal::invokemethod(const PacketWrapper* msg) {
  return *msg->Packet_.invokemethod_;
}
const ::InvokeMethodResult&
PacketWrapper::_Internal::invokemethodresult(const PacketWrapper* msg) {
  return *msg->Packet_.invokemethodresult_;
}
const ::SearchObjects&
PacketWrapper::_Internal::searchobjects(const PacketWrapper* msg) {
  return *msg->Packet_.searchobjects_;
}
const ::SearchObjectsResult&
PacketWrapper::_Internal::searchobjectsresult(const PacketWrapper* msg) {
  return *msg->Packet_.searchobjectsresult_;
}
const ::LoadObject&
PacketWrapper::_Internal::loadobject(const PacketWrapper* msg) {
  return *msg->Packet_.loadobject_;
}
const ::LoadObjectResult&
PacketWrapper::_Internal::loadobjectresult(const PacketWrapper* msg) {
  return *msg->Packet_.loadobjectresult_;
}
void PacketWrapper::set_allocated_invokemethod(::InvokeMethod* invokemethod) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Packet();
  if (invokemethod) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::InvokeMethod>::GetOwningArena(invokemethod);
    if (message_arena != submessage_arena) {
      invokemethod = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, invokemethod, submessage_arena);
    }
    set_has_invokemethod();
    Packet_.invokemethod_ = invokemethod;
  }
  // @@protoc_insertion_point(field_set_allocated:PacketWrapper.invokeMethod)
}
void PacketWrapper::set_allocated_invokemethodresult(::InvokeMethodResult* invokemethodresult) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Packet();
  if (invokemethodresult) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::InvokeMethodResult>::GetOwningArena(invokemethodresult);
    if (message_arena != submessage_arena) {
      invokemethodresult = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, invokemethodresult, submessage_arena);
    }
    set_has_invokemethodresult();
    Packet_.invokemethodresult_ = invokemethodresult;
  }
  // @@protoc_insertion_point(field_set_allocated:PacketWrapper.invokeMethodResult)
}
void PacketWrapper::set_allocated_searchobjects(::SearchObjects* searchobjects) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Packet();
  if (searchobjects) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::SearchObjects>::GetOwningArena(searchobjects);
    if (message_arena != submessage_arena) {
      searchobjects = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, searchobjects, submessage_arena);
    }
    set_has_searchobjects();
    Packet_.searchobjects_ = searchobjects;
  }
  // @@protoc_insertion_point(field_set_allocated:PacketWrapper.searchObjects)
}
void PacketWrapper::set_allocated_searchobjectsresult(::SearchObjectsResult* searchobjectsresult) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Packet();
  if (searchobjectsresult) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::SearchObjectsResult>::GetOwningArena(searchobjectsresult);
    if (message_arena != submessage_arena) {
      searchobjectsresult = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, searchobjectsresult, submessage_arena);
    }
    set_has_searchobjectsresult();
    Packet_.searchobjectsresult_ = searchobjectsresult;
  }
  // @@protoc_insertion_point(field_set_allocated:PacketWrapper.searchObjectsResult)
}
void PacketWrapper::set_allocated_loadobject(::LoadObject* loadobject) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Packet();
  if (loadobject) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::LoadObject>::GetOwningArena(loadobject);
    if (message_arena != submessage_arena) {
      loadobject = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, loadobject, submessage_arena);
    }
    set_has_loadobject();
    Packet_.loadobject_ = loadobject;
  }
  // @@protoc_insertion_point(field_set_allocated:PacketWrapper.loadObject)
}
void PacketWrapper::set_allocated_loadobjectresult(::LoadObjectResult* loadobjectresult) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_Packet();
  if (loadobjectresult) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::LoadObjectResult>::GetOwningArena(loadobjectresult);
    if (message_arena != submessage_arena) {
      loadobjectresult = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, loadobjectresult, submessage_arena);
    }
    set_has_loadobjectresult();
    Packet_.loadobjectresult_ = loadobjectresult;
  }
  // @@protoc_insertion_point(field_set_allocated:PacketWrapper.loadObjectResult)
}
PacketWrapper::PacketWrapper(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PacketWrapper)
}
PacketWrapper::PacketWrapper(const PacketWrapper& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_Packet();
  switch (from.Packet_case()) {
    case kInvokeMethod: {
      _internal_mutable_invokemethod()->::InvokeMethod::MergeFrom(from._internal_invokemethod());
      break;
    }
    case kInvokeMethodResult: {
      _internal_mutable_invokemethodresult()->::InvokeMethodResult::MergeFrom(from._internal_invokemethodresult());
      break;
    }
    case kSearchObjects: {
      _internal_mutable_searchobjects()->::SearchObjects::MergeFrom(from._internal_searchobjects());
      break;
    }
    case kSearchObjectsResult: {
      _internal_mutable_searchobjectsresult()->::SearchObjectsResult::MergeFrom(from._internal_searchobjectsresult());
      break;
    }
    case kLoadObject: {
      _internal_mutable_loadobject()->::LoadObject::MergeFrom(from._internal_loadobject());
      break;
    }
    case kLoadObjectResult: {
      _internal_mutable_loadobjectresult()->::LoadObjectResult::MergeFrom(from._internal_loadobjectresult());
      break;
    }
    case PACKET_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:PacketWrapper)
}

inline void PacketWrapper::SharedCtor() {
clear_has_Packet();
}

PacketWrapper::~PacketWrapper() {
  // @@protoc_insertion_point(destructor:PacketWrapper)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PacketWrapper::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_Packet()) {
    clear_Packet();
  }
}

void PacketWrapper::ArenaDtor(void* object) {
  PacketWrapper* _this = reinterpret_cast< PacketWrapper* >(object);
  (void)_this;
}
void PacketWrapper::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PacketWrapper::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PacketWrapper::clear_Packet() {
// @@protoc_insertion_point(one_of_clear_start:PacketWrapper)
  switch (Packet_case()) {
    case kInvokeMethod: {
      if (GetArenaForAllocation() == nullptr) {
        delete Packet_.invokemethod_;
      }
      break;
    }
    case kInvokeMethodResult: {
      if (GetArenaForAllocation() == nullptr) {
        delete Packet_.invokemethodresult_;
      }
      break;
    }
    case kSearchObjects: {
      if (GetArenaForAllocation() == nullptr) {
        delete Packet_.searchobjects_;
      }
      break;
    }
    case kSearchObjectsResult: {
      if (GetArenaForAllocation() == nullptr) {
        delete Packet_.searchobjectsresult_;
      }
      break;
    }
    case kLoadObject: {
      if (GetArenaForAllocation() == nullptr) {
        delete Packet_.loadobject_;
      }
      break;
    }
    case kLoadObjectResult: {
      if (GetArenaForAllocation() == nullptr) {
        delete Packet_.loadobjectresult_;
      }
      break;
    }
    case PACKET_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PACKET_NOT_SET;
}


void PacketWrapper::Clear() {
// @@protoc_insertion_point(message_clear_start:PacketWrapper)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_Packet();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PacketWrapper::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .InvokeMethod invokeMethod = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_invokemethod(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .InvokeMethodResult invokeMethodResult = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_invokemethodresult(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .SearchObjects searchObjects = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_searchobjects(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .SearchObjectsResult searchObjectsResult = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_searchobjectsresult(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .LoadObject loadObject = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_loadobject(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .LoadObjectResult loadObjectResult = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_loadobjectresult(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PacketWrapper::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PacketWrapper)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .InvokeMethod invokeMethod = 1;
  if (_internal_has_invokemethod()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::invokemethod(this), target, stream);
  }

  // .InvokeMethodResult invokeMethodResult = 2;
  if (_internal_has_invokemethodresult()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::invokemethodresult(this), target, stream);
  }

  // .SearchObjects searchObjects = 3;
  if (_internal_has_searchobjects()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::searchobjects(this), target, stream);
  }

  // .SearchObjectsResult searchObjectsResult = 4;
  if (_internal_has_searchobjectsresult()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::searchobjectsresult(this), target, stream);
  }

  // .LoadObject loadObject = 5;
  if (_internal_has_loadobject()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::loadobject(this), target, stream);
  }

  // .LoadObjectResult loadObjectResult = 6;
  if (_internal_has_loadobjectresult()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::loadobjectresult(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PacketWrapper)
  return target;
}

size_t PacketWrapper::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PacketWrapper)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (Packet_case()) {
    // .InvokeMethod invokeMethod = 1;
    case kInvokeMethod: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Packet_.invokemethod_);
      break;
    }
    // .InvokeMethodResult invokeMethodResult = 2;
    case kInvokeMethodResult: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Packet_.invokemethodresult_);
      break;
    }
    // .SearchObjects searchObjects = 3;
    case kSearchObjects: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Packet_.searchobjects_);
      break;
    }
    // .SearchObjectsResult searchObjectsResult = 4;
    case kSearchObjectsResult: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Packet_.searchobjectsresult_);
      break;
    }
    // .LoadObject loadObject = 5;
    case kLoadObject: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Packet_.loadobject_);
      break;
    }
    // .LoadObjectResult loadObjectResult = 6;
    case kLoadObjectResult: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Packet_.loadobjectresult_);
      break;
    }
    case PACKET_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PacketWrapper::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PacketWrapper::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PacketWrapper::GetClassData() const { return &_class_data_; }

void PacketWrapper::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PacketWrapper *>(to)->MergeFrom(
      static_cast<const PacketWrapper &>(from));
}


void PacketWrapper::MergeFrom(const PacketWrapper& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PacketWrapper)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.Packet_case()) {
    case kInvokeMethod: {
      _internal_mutable_invokemethod()->::InvokeMethod::MergeFrom(from._internal_invokemethod());
      break;
    }
    case kInvokeMethodResult: {
      _internal_mutable_invokemethodresult()->::InvokeMethodResult::MergeFrom(from._internal_invokemethodresult());
      break;
    }
    case kSearchObjects: {
      _internal_mutable_searchobjects()->::SearchObjects::MergeFrom(from._internal_searchobjects());
      break;
    }
    case kSearchObjectsResult: {
      _internal_mutable_searchobjectsresult()->::SearchObjectsResult::MergeFrom(from._internal_searchobjectsresult());
      break;
    }
    case kLoadObject: {
      _internal_mutable_loadobject()->::LoadObject::MergeFrom(from._internal_loadobject());
      break;
    }
    case kLoadObjectResult: {
      _internal_mutable_loadobjectresult()->::LoadObjectResult::MergeFrom(from._internal_loadobjectresult());
      break;
    }
    case PACKET_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PacketWrapper::CopyFrom(const PacketWrapper& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PacketWrapper)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PacketWrapper::IsInitialized() const {
  return true;
}

void PacketWrapper::InternalSwap(PacketWrapper* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(Packet_, other->Packet_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata PacketWrapper::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_qrue_2eproto_getter, &descriptor_table_qrue_2eproto_once,
      file_level_metadata_qrue_2eproto[13]);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Il2CppClassInfo* Arena::CreateMaybeMessage< ::Il2CppClassInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Il2CppClassInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::TypeInfo* Arena::CreateMaybeMessage< ::TypeInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::TypeInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Il2CppFieldInfo* Arena::CreateMaybeMessage< ::Il2CppFieldInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Il2CppFieldInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Il2CppPropertyInfo* Arena::CreateMaybeMessage< ::Il2CppPropertyInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Il2CppPropertyInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Il2CppMethodInfo* Arena::CreateMaybeMessage< ::Il2CppMethodInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Il2CppMethodInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Il2CppType* Arena::CreateMaybeMessage< ::Il2CppType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Il2CppType >(arena);
}
template<> PROTOBUF_NOINLINE ::Il2CppData* Arena::CreateMaybeMessage< ::Il2CppData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Il2CppData >(arena);
}
template<> PROTOBUF_NOINLINE ::InvokeMethod* Arena::CreateMaybeMessage< ::InvokeMethod >(Arena* arena) {
  return Arena::CreateMessageInternal< ::InvokeMethod >(arena);
}
template<> PROTOBUF_NOINLINE ::InvokeMethodResult* Arena::CreateMaybeMessage< ::InvokeMethodResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::InvokeMethodResult >(arena);
}
template<> PROTOBUF_NOINLINE ::SearchObjects* Arena::CreateMaybeMessage< ::SearchObjects >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SearchObjects >(arena);
}
template<> PROTOBUF_NOINLINE ::SearchObjectsResult* Arena::CreateMaybeMessage< ::SearchObjectsResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::SearchObjectsResult >(arena);
}
template<> PROTOBUF_NOINLINE ::LoadObject* Arena::CreateMaybeMessage< ::LoadObject >(Arena* arena) {
  return Arena::CreateMessageInternal< ::LoadObject >(arena);
}
template<> PROTOBUF_NOINLINE ::LoadObjectResult* Arena::CreateMaybeMessage< ::LoadObjectResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::LoadObjectResult >(arena);
}
template<> PROTOBUF_NOINLINE ::PacketWrapper* Arena::CreateMaybeMessage< ::PacketWrapper >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PacketWrapper >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
